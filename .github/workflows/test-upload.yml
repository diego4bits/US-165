name: Test JFrog Maven Deploy with Environments

on: [push, workflow_dispatch]

jobs:
  test-upload:
    name: Test on ${{ matrix.env }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.env }}

    # GitHub debe poder acuñar el JWT para OIDC
    permissions:
      id-token: write
      contents: read

    strategy:
      fail-fast: false
      matrix:
        env: [development, qa]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ─────── Dummy artefacts ────────────────────────────────────────────────
      - name: Generate unique data
        id: unique
        run: |
          ts=$(date +%s)
          echo "timestamp=$ts" >>"$GITHUB_OUTPUT"
          echo "version=1.0-${{ matrix.env }}.$ts" >>"$GITHUB_OUTPUT"

      - name: Create dummy POM
        id: pom
        run: |
          ver=${{ steps.unique.outputs.version }}
          pom_file="$PWD/dummy-artifact-$ver.pom"
          cat >"$pom_file" <<EOF
          <project>
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.test.local</groupId>
            <artifactId>dummy-artifact</artifactId>
            <version>$ver</version>
            <packaging>jar</packaging>
          </project>
          EOF
          echo "pom_path=$pom_file" >>"$GITHUB_OUTPUT"

      - name: Create dummy JAR
        id: jar
        run: |
          ver=${{ steps.unique.outputs.version }}
          jar_file="$PWD/dummy-artifact-$ver.jar"
          echo "Test content – ${{ steps.unique.outputs.timestamp }}" > content.txt
          zip "$jar_file" content.txt
          rm  content.txt
          echo "jar_path=$jar_file" >>"$GITHUB_OUTPUT"

      # ─────── Deploy usando Maven + OIDC ─────────────────────────────────────
      - name: Deploy to Artifactory via Maven (OIDC)
        id: deploy
        uses: ./.github/actions/upload-to-jfrog
        with:
          jar-path:           ${{ steps.jar.outputs.jar_path }}
          pom-path:           ${{ steps.pom.outputs.pom_path }}
          repository-id:      ${{ vars.REPO_ID }}      # p. ej. libs-snapshot-local
          jfrog-url:          ${{ vars.JF_URL }}       # p. ej. https://acme.jfrog.io
          oidc-provider-name: github                   # = nombre de la integración en JFrog
          oidc-audience:      my-aud                       # opcional

      - name: Verify deployment
        if: always()
        run: |
          echo "Status: ${{ steps.deploy.outputs.status }}"
          test "${{ steps.deploy.outputs.status }}" = "success"
