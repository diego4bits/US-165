name: Test JFrog Upload Action with Environments

on: [push, workflow_dispatch]

jobs:
  test-upload:
    name: Test on ${{ matrix.env }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.env }}

    strategy:
      matrix:
        env: [development, qa] 
        fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Unique Data
        id: unique
        shell: bash
        run: |
          TIMESTAMP=$(date +%s)
          echo "timestamp=$TIMESTAMP" >> "$GITHUB_OUTPUT"
          echo "version=1.0-${{ matrix.env }}.${TIMESTAMP}" >> "$GITHUB_OUTPUT"

      - name: Create Dummy POM
        id: pom
        shell: bash
        run: |
          VERSION=${{ steps.unique.outputs.version }}
          POM_FILE="$(pwd)/dummy-artifact-${VERSION}.pom"
          cat > "$POM_FILE" <<EOF
          <project>
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.test.local</groupId>
            <artifactId>dummy-artifact</artifactId>
            <version>${VERSION}</version>
            <packaging>jar</packaging>
          </project>
          EOF
          echo "pom_path=$POM_FILE" >> "$GITHUB_OUTPUT"

      - name: Create Dummy JAR
        id: jar
        shell: bash
        run: |
          VERSION=${{ steps.unique.outputs.version }}
          JAR_FILE="$(pwd)/dummy-artifact-${VERSION}.jar"
          echo "Test content - ${{ steps.unique.outputs.timestamp }}" > content.txt
          zip "$JAR_FILE" content.txt
          rm content.txt
          echo "jar_path=$JAR_FILE" >> "$GITHUB_OUTPUT"

      - name: Run JFrog Upload Action [${{ matrix.env }}]
        id: upload-step
        uses: ./.github/actions/upload-to-jfrog
        with:
          jar-path: ${{ steps.jar.outputs.jar_path }}
          pom-path: ${{ steps.pom.outputs.pom_path }}
          repository-id: ${{ vars.REPO_ID }}
          jfrog-url: ${{ vars.JFROG_URL }}
          jfrog-access-token: ${{ secrets.JFROG_ACCESS_TOKEN }}

      - name: Verify Action Output
        shell: bash
        run: |
          echo "Action finished with status: ${{ steps.upload-step.outputs.status }}"
          if [ "${{ steps.upload-step.outputs.status }}" != "success" ]; then
            echo "::error::Upload action failed for ${{ matrix.env }}"
            exit 1
          fi
